{"version":3,"sources":["components/display.tsx","components/key.tsx","components/keyboard.tsx","api/api.ts","components/app.tsx","index.tsx"],"names":["useStyles","makeStyles","container","display","flexDirection","paddingBottom","paddingRight","alignItems","justifyContent","border","minHeight","padding","textAlign","Display","props","handleKeyDown","a","key","onKey","length","indexOf","classes","className","autoFocus","value","onKeyDown","BGCOLOR","COLOR","width","height","backgroundColor","color","verticalAlign","marginRight","cursor","doubleWidth","KEY_SIZE","Key","style","handleClick","onPress","return","label","klass","onClick","RIGHT_COLOR","row","Keyboard","api","params","process","axios","post","res","ret","data","console","error","body","flex","modal","position","top","left","right","bottom","paddingTop","zIndex","background","loader","fontSize","App","jsxLoader","useState","displayValue","setDisplayValue","isLoading","setLoading","handleKey","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77f2ce85.chunk.js","sourcesContent":["import {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => {\n    return {\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            paddingBottom: '5px',\n            paddingRight: '5px',\n        },\n        display: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            border: '3px solid orange',\n            minHeight: '20px',\n            padding: '3px',\n            textAlign: 'right',\n        }\n    }\n})\n\nconst ALLOWED_CHARS = '0123456789.+-/*%='\n\nexport type IDisplayProps = {\n    value: string\n    onKey: (key: string) => Promise<void>\n}\nexport const Display = (props: IDisplayProps) => {\n\n    const handleKeyDown = async ({key}: React.KeyboardEvent) => {\n        if (key==='Escape') {\n            await props.onKey(key)\n        }\n        if (key==='Enter') {\n            await props.onKey(key)\n        }\n        if (key.length===1 && ALLOWED_CHARS.indexOf(key)) {\n            await props.onKey(key)\n        }\n    }\n\n    const classes = useStyles()\n    return (\n        <div className={classes.container}>\n            <input className={classes.display}\n                   autoFocus={true}\n                   value={props.value}\n                   onKeyDown={handleKeyDown}\n            />\n        </div>\n    )\n}","import {makeStyles} from \"@material-ui/core\";\n\nconst KEY_SIZE=30\nconst BGCOLOR='gray'\nconst COLOR='black'\nconst PADDING=5\nconst MARGIN=5\nconst DOUBLEWIDTH=KEY_SIZE*2+PADDING*2+MARGIN\n\n\n\nconst useStyles = makeStyles(() => {\n    return {\n        key: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: `${KEY_SIZE}px`,\n            height: `${KEY_SIZE}px`,\n            backgroundColor: BGCOLOR,\n            color: COLOR,\n            padding: `${PADDING}px`,\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            marginRight: `${MARGIN}px`,\n            cursor: 'pointer',\n        },\n        doubleWidth: {\n            width: `${DOUBLEWIDTH}px`,\n            height: `${KEY_SIZE}px`,\n            backgroundColor: BGCOLOR,\n            color: COLOR,\n            padding: `${PADDING}px`,\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            marginRight: `${MARGIN}px`,\n            cursor: 'pointer',\n        },\n    }\n})\n\nexport type IKeyProps = {\n    label: string,\n    return?: string,\n    doubleWidth?: boolean,\n    color?: string\n    onPress: (label: string) => Promise<void>\n}\nexport const Key = (props: IKeyProps) => {\n\n    const handleClick = async () => {\n        await props.onPress(props.return || props.label)\n    }\n\n    const classes = useStyles()\n\n    let klass = (props.doubleWidth ? classes.doubleWidth : classes.key)\n    let style\n    if (props.color) {\n        style={backgroundColor: props.color}\n    }\n    return (\n        <div className={klass} style={style} onClick={handleClick}>\n            {props.label}\n        </div>\n    )\n}","import {makeStyles} from \"@material-ui/core\";\nimport {Key} from \"./key\";\n\nconst RIGHT_COLOR = 'orange'\n\nconst useStyles = makeStyles(() => {\n    return {\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n        },\n        row: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n            paddingBottom: '5px',\n        }\n    }\n})\n\nexport interface IKeyboardProps {\n    onKey: (key: string) => Promise<void>\n}\n\nexport const Keyboard = (props: IKeyboardProps) => {\n\n    const classes = useStyles()\n    return (\n        <div className={classes.container}>\n            <div className={classes.row}>\n                <Key label={'C'} onPress={props.onKey} />\n                <Key label='-/+' onPress={props.onKey} />\n                <Key label='%' onPress={props.onKey} />\n                <Key label={'/'} color={RIGHT_COLOR} onPress={props.onKey} />\n            </div>\n            <div className={classes.row}>\n                <Key label={'9'} onPress={props.onKey} />\n                <Key label={'8'} onPress={props.onKey} />\n                <Key label={'7'} onPress={props.onKey} />\n                <Key label={'x'} return={'*'} color={RIGHT_COLOR} onPress={props.onKey} />\n            </div>\n            <div className={classes.row}>\n                <Key label={'6'} onPress={props.onKey} />\n                <Key label={'5'} onPress={props.onKey} />\n                <Key label={'4'} onPress={props.onKey} />\n                <Key label={'-'} color={RIGHT_COLOR} onPress={props.onKey} />\n            </div>\n            <div className={classes.row}>\n                <Key label={'3'} onPress={props.onKey} />\n                <Key label={'2'} onPress={props.onKey} />\n                <Key label={'1'} onPress={props.onKey} />\n                <Key label={'+'} onPress={props.onKey} />\n            </div>\n            <div className={classes.row}>\n                <Key label={'0'} doubleWidth={true} onPress={props.onKey} />\n                <Key label={'.'} onPress={props.onKey} />\n                <Key label={'='} onPress={props.onKey} />\n            </div>\n        </div>\n    )\n}","import axios from 'axios'\n\nexport type APIParams = {displayValue: string, key: string}\nexport type APIRetValue = {value: string}\n\nexport const api = async (params: APIParams) => {\n    const url = process.env.REACT_APP_API_URL || 'http://localhost:5000'\n    try {\n        const res = await axios.post<APIRetValue>(url, params)\n        const ret: APIRetValue = res.data\n        return ret\n    } catch (err) {\n        console.error(err)\n        throw err\n    }\n}","import {Display} from \"./display\";\nimport {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {Keyboard} from \"./keyboard\";\nimport {api} from \"../api/api\";\n\nconst useStyles = makeStyles(() => {\n    return {\n        body: {\n           width: '100%',\n           height: '100%',\n           display: 'flex',\n           flexDirection: 'row',\n           alignItems: 'center',\n           justifyContent: 'center',\n        },\n        container: {\n            flex: 0,\n            display: 'flex',\n            flexDirection: 'column',\n        },\n        modal: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: \"flex\",\n            flexDirection: 'row',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n            paddingTop: '60px',\n            zIndex: 100,\n            background: 'transparent',\n        },\n        loader: {\n            fontSize: '28px',\n            color: 'white',\n        }\n    }\n})\n\nexport const App = () => {\n    const [displayValue, setDisplayValue] = useState<string>('0')\n    const [isLoading, setLoading] = useState<boolean>(false)\n\n    const handleKey = async (key: string) => {\n        let value = displayValue\n        try {\n            setLoading(true)\n            const res = await api({displayValue: value, key})\n            setLoading(false)\n            setDisplayValue(res.value)\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    const classes = useStyles()\n\n    let jsxLoader\n    if (isLoading) {\n        jsxLoader = (\n            <div className={classes.modal}>\n                <div className={classes.loader}>\n                    Processing ...\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.body}>\n            <div className={classes.container}>\n                <Display\n                    value={displayValue}\n                    onKey={handleKey}\n                />\n                <Keyboard\n                    onKey={handleKey}\n                />\n            </div>\n            {jsxLoader}\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from \"./components/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}